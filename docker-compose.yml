services:
  php-base:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: php_base
    networks:
      - chat_network

  api:
    image: php_base
    container_name: chat_api
    restart: unless-stopped
    environment:
      APP_ENV: dev
      DATABASE_URL: "mysql://root:${MYSQL_ROOT_PASSWORD}@db/chat"
    volumes:
      - ./app:/var/www/html
    depends_on:
      - db
    networks:
      - chat_network

  app:
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    container_name: chat_app
    restart: unless-stopped
    environment:
      APP_ENV: dev
      DATABASE_URL: "mysql://root:${MYSQL_ROOT_PASSWORD}@db/chat"
    volumes:
      - ./app:/var/www/html
    depends_on:
      - api
    networks:
      - chat_network

  db:
    image: mariadb:latest
    container_name: chat_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: chat
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - chat_network

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: chat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - app
    networks:
      - chat_network

  cron:
    image: php_base
    container_name: chat_cron
    restart: unless-stopped
    volumes:
      - ./app:/var/www/html
    depends_on:
      - db
    networks:
      - chat_network

  server:
    image: php_base
    container_name: chat_server
    restart: unless-stopped
    ports:
      - "8080:8989"
    volumes:
      - ./app:/var/www/html
      - ./docker/nginx/ssl:/var/ssl
    depends_on:
      - api
    networks:
      - chat_network
    command: php /var/www/html/bin/server

networks:
  chat_network:
    driver: bridge

volumes:
  db_data: